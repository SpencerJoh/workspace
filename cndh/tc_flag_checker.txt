#include <stdio.h>
<parameter name="content">#include <stdio.h>
#include <stdbool.h>
#include <stdint.h>
#include <string.h>

// 간단한 방법: uint8_t를 bool처럼 사용 (0 = false, 1 = true)
typedef struct {
    // CM 그룹 (8개)
    uint8_t CM_TC_1;
    uint8_t CM_TC_3;
    uint8_t CM_TC_4;
    uint8_t CM_TC_5;
    uint8_t CM_TC_6;
    uint8_t CM_TC_60;
    uint8_t CM_TC_63;
    uint8_t CM_TC_66;

    // CW1 그룹 (8개)
    uint8_t CW1_TC_1;
    uint8_t CW1_TC_3;
    uint8_t CW1_TC_4;
    uint8_t CW1_TC_5;
    uint8_t CW1_TC_6;
    uint8_t CW1_TC_60;
    uint8_t CW1_TC_62;
    uint8_t CW1_TC_64;

    // CW2 그룹 (8개)
    uint8_t CW2_TC_1;
    uint8_t CW2_TC_3;
    uint8_t CW2_TC_4;
    uint8_t CW2_TC_5;
    uint8_t CW2_TC_6;
    uint8_t CW2_TC_60;
    uint8_t CW2_TC_62;
    uint8_t CW2_TC_64;
} Telecommand_flag_CubeSpace_t;

// 모든 플래그가 비활성화되었는지 체크 (간단한 방법)
bool check_telecommand_flags_inactive(const Telecommand_flag_CubeSpace_t* flags) {
    // CM 플래그들 체크
    if (flags->CM_TC_1 || flags->CM_TC_3 || flags->CM_TC_4 || 
        flags->CM_TC_5 || flags->CM_TC_6 || flags->CM_TC_60 || 
        flags->CM_TC_63 || flags->CM_TC_66) {
        printf("Warning: CM telecommand flags are active!\n");
        return false;
    }
    
    // CW1 플래그들 체크
    if (flags->CW1_TC_1 || flags->CW1_TC_3 || flags->CW1_TC_4 || 
        flags->CW1_TC_5 || flags->CW1_TC_6 || flags->CW1_TC_60 || 
        flags->CW1_TC_62 || flags->CW1_TC_64) {
        printf("Warning: CW1 telecommand flags are active!\n");
        return false;
    }
    
    // CW2 플래그들 체크
    if (flags->CW2_TC_1 || flags->CW2_TC_3 || flags->CW2_TC_4 || 
        flags->CW2_TC_5 || flags->CW2_TC_6 || flags->CW2_TC_60 || 
        flags->CW2_TC_62 || flags->CW2_TC_64) {
        printf("Warning: CW2 telecommand flags are active!\n");
        return false;
    }
    
    return true; // 모든 플래그가 비활성화됨
}

// 더 빠른 방법: memcmp 사용해서 전체를 한번에 체크
bool check_all_flags_zero_fast(const Telecommand_flag_CubeSpace_t* flags) {
    static const Telecommand_flag_CubeSpace_t zero_flags = {0};
    return (memcmp(flags, &zero_flags, sizeof(Telecommand_flag_CubeSpace_t)) == 0);
}

// 상세하게 어떤 플래그가 활성화되었는지 보여주는 함수
void check_and_report_active_flags(const Telecommand_flag_CubeSpace_t* flags) {
    printf("=== Telecommand Flag Status ===\n");
    
    // CM 플래그들
    printf("CM Flags: ");
    if (flags->CM_TC_1) printf("TC_1 ");
    if (flags->CM_TC_3) printf("TC_3 ");
    if (flags->CM_TC_4) printf("TC_4 ");
    if (flags->CM_TC_5) printf("TC_5 ");
    if (flags->CM_TC_6) printf("TC_6 ");
    if (flags->CM_TC_60) printf("TC_60 ");
    if (flags->CM_TC_63) printf("TC_63 ");
    if (flags->CM_TC_66) printf("TC_66 ");
    if (!(flags->CM_TC_1 || flags->CM_TC_3 || flags->CM_TC_4 || 
          flags->CM_TC_5 || flags->CM_TC_6 || flags->CM_TC_60 || 
          flags->CM_TC_63 || flags->CM_TC_66)) {
        printf("(none active)");
    }
    printf("\n");
    
    // CW1 플래그들
    printf("CW1 Flags: ");
    if (flags->CW1_TC_1) printf("TC_1 ");
    if (flags->CW1_TC_3) printf("TC_3 ");
    if (flags->CW1_TC_4) printf("TC_4 ");
    if (flags->CW1_TC_5) printf("TC_5 ");
    if (flags->CW1_TC_6) printf("TC_6 ");
    if (flags->CW1_TC_60) printf("TC_60 ");
    if (flags->CW1_TC_62) printf("TC_62 ");
    if (flags->CW1_TC_64) printf("TC_64 ");
    if (!(flags->CW1_TC_1 || flags->CW1_TC_3 || flags->CW1_TC_4 || 
          flags->CW1_TC_5 || flags->CW1_TC_6 || flags->CW1_TC_60 || 
          flags->CW1_TC_62 || flags->CW1_TC_64)) {
        printf("(none active)");
    }
    printf("\n");
    
    // CW2 플래그들
    printf("CW2 Flags: ");
    if (flags->CW2_TC_1) printf("TC_1 ");
    if (flags->CW2_TC_3) printf("TC_3 ");
    if (flags->CW2_TC_4) printf("TC_4 ");
    if (flags->CW2_TC_5) printf("TC_5 ");
    if (flags->CW2_TC_6) printf("TC_6 ");
    if (flags->CW2_TC_60) printf("TC_60 ");
    if (flags->CW2_TC_62) printf("TC_62 ");
    if (flags->CW2_TC_64) printf("TC_64 ");
    if (!(flags->CW2_TC_1 || flags->CW2_TC_3 || flags->CW2_TC_4 || 
          flags->CW2_TC_5 || flags->CW2_TC_6 || flags->CW2_TC_60 || 
          flags->CW2_TC_62 || flags->CW2_TC_64)) {
        printf("(none active)");
    }
    printf("\n");
}

// 모든 플래그를 0으로 초기화
void reset_all_telecommand_flags(Telecommand_flag_CubeSpace_t* flags) {
    memset(flags, 0, sizeof(Telecommand_flag_CubeSpace_t));
}

// 그룹별로 초기화
void reset_CM_flags(Telecommand_flag_CubeSpace_t* flags) {
    flags->CM_TC_1 = 0;
    flags->CM_TC_3 = 0;
    flags->CM_TC_4 = 0;
    flags->CM_TC_5 = 0;
    flags->CM_TC_6 = 0;
    flags->CM_TC_60 = 0;
    flags->CM_TC_63 = 0;
    flags->CM_TC_66 = 0;
}

void reset_CW1_flags(Telecommand_flag_CubeSpace_t* flags) {
    flags->CW1_TC_1 = 0;
    flags->CW1_TC_3 = 0;
    flags->CW1_TC_4 = 0;
    flags->CW1_TC_5 = 0;
    flags->CW1_TC_6 = 0;
    flags->CW1_TC_60 = 0;
    flags->CW1_TC_62 = 0;
    flags->CW1_TC_64 = 0;
}

void reset_CW2_flags(Telecommand_flag_CubeSpace_t* flags) {
    flags->CW2_TC_1 = 0;
    flags->CW2_TC_3 = 0;
    flags->CW2_TC_4 = 0;
    flags->CW2_TC_5 = 0;
    flags->CW2_TC_6 = 0;
    flags->CW2_TC_60 = 0;
    flags->CW2_TC_62 = 0;
    flags->CW2_TC_64 = 0;
}

// 개별 그룹이 모두 비활성화되었는지 체크
bool is_CM_flags_inactive(const Telecommand_flag_CubeSpace_t* flags) {
    return !(flags->CM_TC_1 || flags->CM_TC_3 || flags->CM_TC_4 || 
             flags->CM_TC_5 || flags->CM_TC_6 || flags->CM_TC_60 || 
             flags->CM_TC_63 || flags->CM_TC_66);
}

bool is_CW1_flags_inactive(const Telecommand_flag_CubeSpace_t* flags) {
    return !(flags->CW1_TC_1 || flags->CW1_TC_3 || flags->CW1_TC_4 || 
             flags->CW1_TC_5 || flags->CW1_TC_6 || flags->CW1_TC_60 || 
             flags->CW1_TC_62 || flags->CW1_TC_64);
}

bool is_CW2_flags_inactive(const Telecommand_flag_CubeSpace_t* flags) {
    return !(flags->CW2_TC_1 || flags->CW2_TC_3 || flags->CW2_TC_4 || 
             flags->CW2_TC_5 || flags->CW2_TC_6 || flags->CW2_TC_60 || 
             flags->CW2_TC_62 || flags->CW2_TC_64);
}

// 주기적으로 호출할 체크 함수
void periodic_telecommand_flag_check(Telecommand_flag_CubeSpace_t* flags) {
    static int check_counter = 0;
    
    check_counter++;
    printf("[Check #%d] ", check_counter);
    
    // 방법 1: 자세한 체크
    if (!check_telecommand_flags_inactive(flags)) {
        printf("Some flags are active! Details:\n");
        check_and_report_active_flags(flags);
    } else {
        printf("All telecommand flags are inactive.\n");
    }
    
    // 방법 2: 빠른 체크 (참고용)
    if (check_all_flags_zero_fast(flags)) {
        printf("(Fast check also confirms: all flags are zero)\n");
    }
    
    printf("\n");
}

// 사용 예제
int main() {
    Telecommand_flag_CubeSpace_t tc_flags = {0}; // 모든 플래그를 0으로 초기화
    
    printf("Structure size: %zu bytes\n", sizeof(Telecommand_flag_CubeSpace_t));
    printf("(Original bool version would be: %zu bytes)\n", sizeof(bool) * 24);
    printf("\n");
    
    // 테스트용으로 몇 개 플래그 설정 (아주 간단!)
    tc_flags.CM_TC_1 = 1;      // 활성화
    tc_flags.CM_TC_66 = 1;     // 활성화
    tc_flags.CW1_TC_60 = 1;    // 활성화
    tc_flags.CW2_TC_3 = 1;     // 활성화
    
    // 주기적 체크 시뮬레이션
    for (int i = 0; i < 4; i++) {
        periodic_telecommand_flag_check(&tc_flags);
        
        // 각 스텝마다 일부 플래그 변경
        if (i == 0) {
            printf("Turning off CM_TC_1...\n");
            tc_flags.CM_TC_1 = 0;
        } else if (i == 1) {
            printf("Resetting all CM flags...\n");
            reset_CM_flags(&tc_flags);
        } else if (i == 2) {
            printf("Resetting all flags...\n");
            reset_all_telecommand_flags(&tc_flags);
        }
    }
    
    return 0;
}